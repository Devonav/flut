import { useState } from 'react';
// 1. The unused imports (`useMutation`, `gql`) have been removed.
// 2. The unused `CREATE_POST` constant has been removed.

// We only need to import the hooks and types generated by the codegen.
import {
  useCreatePostMutation,
  GetPostsDocument,
  GetPostsQuery,
} from '../../gql/generated';

export function CreatePost() {
  const [content, setContent] = useState('');
  
  // The generated hook already knows what mutation to run.
  const [createPost, { loading, error }] = useCreatePostMutation({
    update(cache, { data: mutationResult }) {
      const newPost = mutationResult?.createPost;
      if (!newPost) return;

      const existingData = cache.readQuery<GetPostsQuery>({
        query: GetPostsDocument,
      });

      if (existingData?.posts) {
        cache.writeQuery({
          query: GetPostsDocument,
          data: { posts: [newPost, ...existingData.posts] },
        });
      }
    }
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!content.trim() || loading) return;
    createPost({ variables: { content } });
    setContent('');
  };

  return (
    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>
      <h2>Create a New Post</h2>
      <textarea
        value={content}
        onChange={(e) => setContent(e.target.value)}
        placeholder="What's on your mind?"
        rows={4}
        style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}
      />
      <button type="submit" disabled={loading} style={{ marginTop: '10px' }}>
        {loading ? 'Posting...' : 'Post'}
      </button>
      {error && <p style={{ color: 'red' }}>Error: {error.message}</p>}
    </form>
  );
}